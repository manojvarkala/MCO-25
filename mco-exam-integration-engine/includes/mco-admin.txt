<?php
if (!defined('ABSPATH')) exit;

// --- HOOKS ---
if (!function_exists('mco_register_admin_hooks')) {
    function mco_register_admin_hooks() {
        add_action('admin_menu', 'mco_add_admin_menu');
        add_action('admin_init', 'mco_register_settings');
        add_action('admin_init', 'mco_handle_admin_actions');
        add_action('add_meta_boxes', 'mco_add_meta_boxes');
        add_action('save_post', 'mco_save_meta_box_data');
    }
}

// --- MENU & PAGE SETUP ---
if (!function_exists('mco_add_admin_menu')) {
    function mco_add_admin_menu() {
        add_menu_page(
            'Exam App Engine',
            'Exam App Engine',
            'manage_options',
            'mco-exam-engine',
            'mco_create_admin_page',
            'dashicons-analytics',
            25
        );
    }
}

function mco_create_admin_page() {
    $active_tab = isset($_GET['tab']) ? sanitize_key($_GET['tab']) : 'main_settings';
    ?>
    <div class="wrap">
        <h1>MCO Exam Integration Engine</h1>
        <h2 class="nav-tab-wrapper">
            <a href="?page=mco-exam-engine&tab=main_settings" class="nav-tab <?php echo $active_tab == 'main_settings' ? 'nav-tab-active' : ''; ?>">Main Settings</a>
            <a href="?page=mco-exam-engine&tab=certificate_templates" class="nav-tab <?php echo $active_tab == 'certificate_templates' ? 'nav-tab-active' : ''; ?>">Certificate Templates</a>
            <a href="?page=mco-exam-engine&tab=bulk_import" class="nav-tab <?php echo $active_tab == 'bulk_import' ? 'nav-tab-active' : ''; ?>">Bulk Import</a>
            <a href="?page=mco-exam-engine&tab=tools" class="nav-tab <?php echo $active_tab == 'tools' ? 'nav-tab-active' : ''; ?>">Tools</a>
        </h2>

        <form method="post" action="options.php">
            <?php
            settings_fields('mco_settings_group');
            do_settings_sections('mco-exam-engine');

            if ($active_tab == 'main_settings') {
                mco_render_main_settings_tab();
            } elseif ($active_tab == 'certificate_templates') {
                mco_render_certificate_templates_tab();
            }
            ?>
        </form>
        
        <?php
        // These tabs have their own forms, so they are outside the main settings form.
        if ($active_tab == 'bulk_import') {
            mco_render_bulk_import_tab();
        } elseif ($active_tab == 'tools') {
            mco_render_tools_tab();
        }
        ?>
    </div>
    <?php
}

// --- SETTINGS REGISTRATION ---
function mco_register_settings() {
    register_setting('mco_settings_group', 'mco_exam_app_url');
    register_setting('mco_settings_group', 'mco_custom_logo_url');
    register_setting('mco_settings_group', 'mco_spin_wheel_enabled');
    register_setting('mco_settings_group', 'mco_certificate_templates');
}


// --- TAB RENDERING FUNCTIONS ---

function mco_render_main_settings_tab() {
    ?>
    <table class="form-table">
        <tr valign="top">
            <th scope="row">Exam Application URL(s)</th>
            <td>
                <textarea name="mco_exam_app_url" rows="3" class="large-text"><?php echo esc_attr(get_option('mco_exam_app_url')); ?></textarea>
                <p class="description">Enter the full URL of your React application. For multiple domains (e.g., production and staging), enter each on a new line. This is required for CORS and SSO to function correctly.</p>
            </td>
        </tr>
        <tr valign="top">
            <th scope="row">Custom Logo URL</th>
            <td>
                <input type="text" name="mco_custom_logo_url" value="<?php echo esc_attr(get_option('mco_custom_logo_url')); ?>" class="large-text" />
                <p class="description">Optional. Enter a full URL to a custom logo. If left blank, the app will use the site's default icon.</p>
            </td>
        </tr>
         <tr valign="top">
            <th scope="row">Enable "Spin & Win"</th>
            <td>
                <label>
                    <input type="checkbox" name="mco_spin_wheel_enabled" value="1" <?php checked(1, get_option('mco_spin_wheel_enabled'), true); ?> />
                    Enable the gamified "Spin & Win" feature for users.
                </label>
            </td>
        </tr>
    </table>
    <?php submit_button(); ?>
    <?php
}

function mco_render_certificate_templates_tab() {
    $templates = get_option('mco_certificate_templates', mco_get_default_certificate_templates());
    ?>
    <h3>Certificate Templates</h3>
    <p>Manage the templates used for generating PDF certificates. Use placeholders like <code>{candidateName}</code>, <code>{examName}</code>, and <code>{finalScore}</code>.</p>
    <div id="mco-templates-wrapper">
        <?php foreach ($templates as $index => $template) : ?>
            <div class="mco-template-card">
                <table class="form-table">
                    <tr valign="top"><th scope="row">Template ID</th><td><input type="text" readonly value="<?php echo esc_attr($template['id']); ?>" class="regular-text" /></td></tr>
                    <tr valign="top"><th scope="row">Template Name</th><td><input type="text" name="mco_certificate_templates[<?php echo $index; ?>][name]" value="<?php echo esc_attr($template['name']); ?>" class="regular-text" /></td></tr>
                    <tr valign="top"><th scope="row">Certificate Title</th><td><input type="text" name="mco_certificate_templates[<?php echo $index; ?>][title]" value="<?php echo esc_attr($template['title']); ?>" class="large-text" /></td></tr>
                    <tr valign="top"><th scope="row">Body Text</th><td><textarea name="mco_certificate_templates[<?php echo $index; ?>][body]" rows="3" class="large-text"><?php echo esc_textarea($template['body']); ?></textarea></td></tr>
                    <tr valign="top"><th scope="row">Signature 1 Name</th><td><input type="text" name="mco_certificate_templates[<?php echo $index; ?>][signature1Name]" value="<?php echo esc_attr($template['signature1Name']); ?>" class="regular-text" /></td></tr>
                    <tr valign="top"><th scope="row">Signature 1 Title</th><td><input type="text" name="mco_certificate_templates[<?php echo $index; ?>][signature1Title]" value="<?php echo esc_attr($template['signature1Title']); ?>" class="regular-text" /></td></tr>
                    <tr valign="top"><th scope="row">Signature 1 Image URL</th><td><input type="text" name="mco_certificate_templates[<?php echo $index; ?>][signature1ImageUrl]" value="<?php echo esc_attr($template['signature1ImageUrl']); ?>" class="large-text" /></td></tr>
                    <tr valign="top"><th scope="row">Signature 2 Name</th><td><input type="text" name="mco_certificate_templates[<?php echo $index; ?>][signature2Name]" value="<?php echo esc_attr($template['signature2Name']); ?>" class="regular-text" /></td></tr>
                    <tr valign="top"><th scope="row">Signature 2 Title</th><td><input type="text" name="mco_certificate_templates[<?php echo $index; ?>][signature2Title]" value="<?php echo esc_attr($template['signature2Title']); ?>" class="regular-text" /></td></tr>
                    <tr valign="top"><th scope="row">Signature 2 Image URL</th><td><input type="text" name="mco_certificate_templates[<?php echo $index; ?>][signature2ImageUrl]" value="<?php echo esc_attr($template['signature2ImageUrl']); ?>" class="large-text" /></td></tr>
                </table>
                <input type="hidden" name="mco_certificate_templates[<?php echo $index; ?>][id]" value="<?php echo esc_attr($template['id']); ?>" />
            </div>
        <?php endforeach; ?>
    </div>
    <style>.mco-template-card { border: 1px solid #ccd0d4; padding: 1rem; margin-bottom: 1rem; background: #fff; border-radius: 4px; }</style>
    <?php submit_button('Save Templates'); ?>
    <?php
}

function mco_render_bulk_import_tab() { /* ... Bulk import form would go here ... */ }

function mco_render_tools_tab() {
    // --- Prerequisite checks for Tenant Blueprint Generator ---
    $app_url = get_option('mco_exam_app_url');
    $logo_url = get_option('mco_custom_logo_url') ?: get_site_icon_url();
    $templates = get_option('mco_certificate_templates', []);
    $has_signatures = false;
    foreach ($templates as $template) {
        if (!empty($template['signature1Name'])) {
            $has_signatures = true;
            break;
        }
    }
    $prerequisites_met = !empty($app_url) && !empty($logo_url) && $has_signatures;

    ?>
    <h3>Developer & Maintenance Tools</h3>
    
    <div class="mco-tool-card">
        <h4>Generate Tenant Blueprint</h4>
        <p class="description">Generate a starter <code>tenant-config.json</code> file for launching a new tenant. This file contains branding and empty content structures. You must configure the prerequisites before you can generate the file.</p>
        
        <div id="mco-prerequisites">
            <p><strong>Prerequisites Checklist:</strong></p>
            <ul>
                <li class="<?php echo !empty($app_url) ? 'complete' : ''; ?>">Set the Exam Application URL in Main Settings.</li>
                <li class="<?php echo !empty($logo_url) ? 'complete' : ''; ?>">Set a Custom Logo URL or a Site Icon.</li>
                <li class="<?php echo $has_signatures ? 'complete' : ''; ?>">Configure at least one Signature in Certificate Templates.</li>
            </ul>
        </div>
        
        <form method="post" action="">
            <input type="hidden" name="mco_action" value="generate_tenant_blueprint">
            <?php wp_nonce_field('mco_generate_tenant_blueprint_nonce', 'mco_nonce'); ?>
            <?php submit_button('Generate & Download Blueprint', 'primary', 'submit', true, !$prerequisites_met ? ['disabled' => 'disabled'] : []); ?>
        </form>
    </div>

    <div class="mco-tool-card">
        <h4>Generate Full Content Snapshot</h4>
        <p class="description">Generate a complete, fully-populated JSON file containing all current exams, books, prices, and settings. Use this to create a point-in-time backup or to update the static fallback file in your React app for faster initial loads.</p>
        <form method="post" action="">
            <input type="hidden" name="mco_action" value="generate_full_snapshot">
            <?php wp_nonce_field('mco_generate_full_snapshot_nonce', 'mco_nonce'); ?>
            <?php submit_button('Generate & Download Full Snapshot', 'secondary'); ?>
        </form>
    </div>

    <div class="mco-tool-card">
        <h4>Clear Server Config Cache</h4>
        <p class="description">Force the server to rebuild its main configuration cache. Use this after making significant changes to exam programs or products to ensure the app reflects the latest data immediately.</p>
        <form method="post" action="">
            <input type="hidden" name="mco_action" value="clear_config_cache">
            <?php wp_nonce_field('mco_clear_config_cache_nonce', 'mco_nonce'); ?>
            <?php submit_button('Clear Server Config Cache', 'delete'); ?>
        </form>
    </div>
    
    <style>
        .mco-tool-card { border: 1px solid #ccd0d4; padding: 1rem; margin-top: 1rem; background: #fff; border-radius: 4px; }
        #mco-prerequisites ul { list-style: none; margin-left: 0; }
        #mco-prerequisites li::before { content: '❌'; margin-right: 8px; color: #dc3232; }
        #mco-prerequisites li.complete::before { content: '✅'; color: #46b450; }
    </style>
    <?php
}

// --- META BOXES for CPTs ---
function mco_add_meta_boxes() {
    add_meta_box('mco_exam_program_details', 'Exam Program Details', 'mco_exam_program_metabox_html', 'mco_exam_program', 'normal', 'high');
    add_meta_box('mco_recommended_book_details', 'Book Details', 'mco_book_metabox_html', 'mco_recommended_book', 'normal', 'high');
}

function mco_exam_program_metabox_html($post) {
    wp_nonce_field('mco_save_meta_box_data', 'mco_meta_box_nonce');
    // ... HTML for exam program meta box fields ...
}

function mco_book_metabox_html($post) {
     wp_nonce_field('mco_save_meta_box_data', 'mco_meta_box_nonce');
    // ... HTML for book meta box fields ...
}

function mco_save_meta_box_data($post_id) {
    if (!isset($_POST['mco_meta_box_nonce']) || !wp_verify_nonce($_POST['mco_meta_box_nonce'], 'mco_save_meta_box_data')) return;
    if (defined('DOING_AUTOSAVE') && DOING_AUTOSAVE) return;
    if (!current_user_can('edit_post', $post_id)) return;
    // ... Logic to save meta box data ...
}

// --- ACTION HANDLERS for Tools ---
function mco_handle_admin_actions() {
    if (isset($_POST['mco_action']) && isset($_POST['mco_nonce'])) {
        $action = sanitize_key($_POST['mco_action']);
        $nonce = sanitize_text_field($_POST['mco_nonce']);

        if ($action === 'generate_tenant_blueprint' && wp_verify_nonce($nonce, 'mco_generate_tenant_blueprint_nonce')) {
            mco_handle_generate_tenant_blueprint();
        }
        if ($action === 'generate_full_snapshot' && wp_verify_nonce($nonce, 'mco_generate_full_snapshot_nonce')) {
            mco_handle_generate_full_snapshot();
        }
        if ($action === 'clear_config_cache' && wp_verify_nonce($nonce, 'mco_clear_config_cache_nonce')) {
            delete_transient('mco_app_config_data');
            add_action('admin_notices', function() {
                echo '<div class="notice notice-success is-dismissible"><p>Server configuration cache has been cleared.</p></div>';
            });
        }
    }
}
?>