<?php
if (!defined('ABSPATH')) exit;

// --- ICON HELPER ---
function mco_get_svg_icon($name) {
    $icons = [
        'practice' => '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"/><path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"/></svg>',
        'cert' => '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="8" r="6"/><path d="M15.477 12.89 17 22l-5-3-5 3 1.523-9.11"/></svg>',
        'cart' => '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="9" cy="21" r="1"/><circle cx="20" cy="21" r="1"/><path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"/></svg>',
        'bundle' => '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 2 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4Z"/><path d="M3 6h18"/><path d="M16 10a4 4 0 0 1-8 0"/></svg>',
        'check' => '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"><path d="M20 6 9 17l-5-5"/></svg>',
        'star' => '<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="currentColor" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"/></svg>',
    ];
    return $icons[$name] ?? '';
}

// --- HELPER FUNCTIONS FOR PROCEDURAL BOOK COVERS ---
function mco_render_annapoorna_style_a($book, $color_index) {
    $colors = [
        ['bg' => '#0369a1', 'pattern' => '#075985', 'text' => '#ffffff'],
        ['bg' => '#059669', 'pattern' => '#065f46', 'text' => '#ffffff'],
        ['bg' => '#be185d', 'pattern' => '#9d174d', 'text' => '#ffffff'],
        ['bg' => '#7e22ce', 'pattern' => '#6b21a8', 'text' => '#ffffff'],
        ['bg' => '#334155', 'pattern' => '#1e293b', 'text' => '#ffffff'],
    ];
    $color = $colors[$color_index % 5];
    ob_start();
    ?>
    <div class="mco-book-cover mco-proc-cover-annapoorna-a" style="color: <?php echo esc_attr($color['text']); ?>;">
        <div class="mco-proc-cover-annapoorna-a__bg" style="background-color: <?php echo esc_attr($color['bg']); ?>;"></div>
        <div class="mco-proc-cover-annapoorna-a__pattern-bg" style="background-color: <?php echo esc_attr($color['pattern']); ?>;">
             <svg width="100%" height="100%" class="mco-proc-cover-annapoorna-a__pattern-svg">
                <defs><pattern id="mco-annapoorna-pattern-a-php" patternUnits="userSpaceOnUse" width="20" height="20"><circle cx="10" cy="10" r="1" fill="white" /></pattern></defs>
                <rect width="100%" height="100%" fill="url(#mco-annapoorna-pattern-a-php)" />
            </svg>
        </div>
        <div class="mco-proc-cover-annapoorna-a__content">
            <span class="mco-proc-cover-annapoorna-a__super-title">Study Material</span>
            <h4 class="mco-proc-cover-annapoorna-a__title"><?php echo esc_html($book['title']); ?></h4>
        </div>
    </div>
    <?php
    return ob_get_clean();
}

function mco_render_annapoorna_style_b($book, $color_index) {
    $colors = [
        ['bg' => '#fef08a', 'shape' => '#facc15', 'text' => '#713f12'],
        ['bg' => '#d9f99d', 'shape' => '#a3e635', 'text' => '#3f6212'],
        ['bg' => '#cffafe', 'shape' => '#67e8f9', 'text' => '#155e75'],
        ['bg' => '#f5d0fe', 'shape' => '#e879f9', 'text' => '#701a75'],
        ['bg' => '#e5e7eb', 'shape' => '#9ca3af', 'text' => '#1f2937'],
    ];
    $color = $colors[$color_index % 5];
    ob_start();
    ?>
    <div class="mco-book-cover mco-proc-cover-annapoorna-b" style="background-color: <?php echo esc_attr($color['bg']); ?>; color: <?php echo esc_attr($color['text']); ?>;">
        <div class="mco-proc-cover-annapoorna-b__shape" style="background-color: <?php echo esc_attr($color['shape']); ?>;"></div>
        <div class="mco-proc-cover-annapoorna-b__content">
            <h4 class="mco-proc-cover-annapoorna-b__title"><?php echo esc_html($book['title']); ?></h4>
            <span class="mco-proc-cover-annapoorna-b__super-title">Official Guide</span>
        </div>
    </div>
    <?php
    return ob_get_clean();
}

function mco_render_mco_style_a($book, $color_index) {
    $colors = [
        ['bg' => '#334155', 'text' => '#f1f5f9', 'bgWord' => '#475569'],
        ['bg' => '#0891b2', 'text' => '#cffafe', 'bgWord' => '#155e75'],
        ['bg' => '#115e59', 'text' => '#ccfbf1', 'bgWord' => '#134e4a'],
        ['bg' => '#0369a1', 'text' => '#e0f2fe', 'bgWord' => '#0c4a6e'],
    ];
    $color = $colors[$color_index % 4];
    $title_words = explode(' ', $book['title']);
    $bg_word_candidates = array_filter($title_words, function($w) { return strlen($w) > 4; });
    $bg_word = strtoupper(empty($bg_word_candidates) ? ($title_words[0] ?? '') : current($bg_word_candidates));

    ob_start();
    ?>
     <div class="mco-book-cover mco-proc-cover-mco-a mco-proc-cover-mco-a--color-<?php echo ($color_index % 4); ?>">
        <span class="mco-proc-cover-mco-a__bg-word"><?php echo esc_html($bg_word); ?></span>
        <div class="mco-proc-cover-mco-a__content">
             <h4 class="mco-proc-cover-mco-a__title"><?php echo esc_html($book['title']); ?></h4>
        </div>
    </div>
    <?php
    return ob_get_clean();
}

function mco_render_mco_style_b($book, $color_index) {
    $colors = [
        ['bg' => '#1e293b', 'text' => '#ffffff', 'accent' => '#38bdf8'],
        ['bg' => '#44403c', 'text' => '#ffffff', 'accent' => '#facc15'],
        ['bg' => '#0c4a6e', 'text' => '#ffffff', 'accent' => '#fb7185'],
        ['bg' => '#065f46', 'text' => '#ffffff', 'accent' => '#a3e635'],
    ];
    ob_start();
    ?>
    <div class="mco-book-cover mco-proc-cover-mco-b mco-proc-cover-mco-b--color-<?php echo ($color_index % 4); ?>">
        <div class="mco-proc-cover-mco-b__accent"></div>
        <div class="mco-proc-cover-mco-b__content">
            <span class="mco-proc-cover-mco-b__super-title">Reference Material</span>
            <h4 class="mco-proc-cover-mco-b__title"><?php echo esc_html($book['title']); ?></h4>
        </div>
        <div class="mco-proc-cover-mco-b__logo-mark">MCO</div>
    </div>
    <?php
    return ob_get_clean();
}

function mco_render_annapoorna_procedural_cover_php($book) {
    $hash = 0; $str = $book['title'];
    for ($i = 0; $i < strlen($str); $i++) { $hash = ord($str[$i]) + (($hash << 5) - $hash); }
    $style_index = abs($hash) % 2;
    $color_index = floor(abs($hash) / 2);
    return ($style_index === 0) ? mco_render_annapoorna_style_a($book, $color_index) : mco_render_annapoorna_style_b($book, $color_index);
}

function mco_render_mco_procedural_cover_php($book) {
    $hash = 0; $str = $book['title'];
    for ($i = 0; $i < strlen($str); $i++) { $hash = ord($str[$i]) + (($hash << 5) - $hash); }
    $style_index = abs($hash) % 2;
    $color_index = floor(abs($hash) / 2);
    return ($style_index === 0) ? mco_render_mco_style_a($book, $color_index) : mco_render_mco_style_b($book, $color_index);
}

// --- HOOKS ---
if (!function_exists('mco_register_shortcode_hooks')) {
    function mco_register_shortcode_hooks() {
        add_shortcode('mco_exam_login', 'mco_exam_login_shortcode');
        add_shortcode('mco_exam_showcase', 'mco_exam_showcase_shortcode');
        add_shortcode('exam_program', 'mco_exam_showcase_shortcode'); // Alias
        add_shortcode('mco_book_showcase', 'mco_book_showcase_shortcode');
        add_shortcode('mco_single_book', 'mco_single_book_shortcode');
        
        add_action('wp_enqueue_scripts', 'mco_enqueue_shortcode_styles');
        add_action('wp', 'mco_prevent_caching_on_shortcode_pages');

        add_filter('the_content', 'mco_auto_apply_single_book_style', 999);
    }
}

if (!function_exists('mco_auto_apply_single_book_style')) {
    function mco_auto_apply_single_book_style($content) {
        if (is_singular('mco_recommended_book') && in_the_loop() && is_main_query() && !is_admin()) {
            if (has_shortcode($content, 'mco_single_book')) {
                return $content;
            }
            remove_filter('the_content', 'mco_auto_apply_single_book_style', 999);
            $new_content = mco_single_book_shortcode([]);
            add_filter('the_content', 'mco_auto_apply_single_book_style', 999);
            return $new_content;
        }
        return $content;
    }
}

if (!function_exists('mco_prevent_caching_on_shortcode_pages')) {
    function mco_prevent_caching_on_shortcode_pages() {
        if (is_admin()) return;
        global $post;
        if (is_a($post, 'WP_Post') && (
            has_shortcode($post->post_content, 'mco_exam_showcase') ||
            has_shortcode($post->post_content, 'exam_program') ||
            has_shortcode($post->post_content, 'mco_book_showcase') ||
            has_shortcode($post->post_content, 'mco_single_book') ||
            has_shortcode($post->post_content, 'mco_exam_login') ||
            is_singular('mco_recommended_book')
        )) {
            if (!defined('DONOTCACHEPAGE')) define('DONOTCACHEPAGE', true);
        }
    }
}

// --- STYLES ---
if (!function_exists('mco_enqueue_shortcode_styles')) {
    function mco_enqueue_shortcode_styles() {
        wp_enqueue_style('mco-styles', MCO_PLUGIN_URL . 'assets/mco-styles.css', [], MCO_PLUGIN_VERSION);
    }
}

// --- SHORTCODE IMPLEMENTATIONS ---

function mco_exam_login_shortcode() {
    if (is_user_logged_in()) {
        $app_url = mco_get_exam_app_url();
        if (!$app_url) return '<p>Exam application URL is not configured.</p>';
        $token = mco_generate_exam_jwt(get_current_user_id());
        if (!$token) return '<p>Could not generate authentication token.</p>';
        $redirect_url = add_query_arg('token', $token, $app_url . '/auth');
        if (!headers_sent()) {
            wp_redirect($redirect_url); exit;
        }
        return '<p>Redirecting... <a href="' . esc_url($redirect_url) . '">Click here</a>.</p><script>window.location.href="' . esc_url($redirect_url) . '";</script>';
    } else {
        $login_url = wp_login_url(get_permalink());
        if (!headers_sent()) {
            wp_redirect($login_url); exit;
        }
        return '<p>Please <a href="' . esc_url($login_url) . '">log in</a>.</p>';
    }
}

function mco_exam_showcase_shortcode($atts) {
    $atts = shortcode_atts(['id' => ''], $atts, 'exam_program');
    $program_id_str = sanitize_text_field($atts['id']);
    
    $query_args = ['post_type' => 'mco_exam_program', 'posts_per_page' => -1, 'post_status' => 'publish', 'orderby' => 'title', 'order' => 'ASC'];
    if (!empty($program_id_str)) {
        $post_id_from_app_id = (int) str_replace('prod-', '', $program_id_str);
        if ($post_id_from_app_id > 0) $query_args['p'] = $post_id_from_app_id;
        else { $query_args['name'] = $program_id_str; $query_args['posts_per_page'] = 1; }
    }
    
    $programs = get_posts($query_args);
    if (empty($programs)) return '<p>No exam programs found.</p>';
    
    $config_data = mco_get_app_config_data();
    $app_url = mco_get_exam_app_url();
    if (!$config_data || !$app_url) return '<p>Application is not configured correctly.</p>';

    ob_start();
    
    $subscriptions_enabled = get_option('mco_subscriptions_enabled', '1') === '1';
    $bundles_enabled = get_option('mco_bundles_enabled', '1') === '1';
    $is_subscribed = (is_user_logged_in() && class_exists('WC_Subscriptions') && function_exists('wcs_user_has_subscription') && wcs_user_has_subscription(get_current_user_id(), '', 'active'));
    
    if (!$is_subscribed && empty($program_id_str) && $subscriptions_enabled) {
        $monthly_sub = $config_data['examPrices']['sub-monthly'] ?? null;
        $yearly_sub = $config_data['examPrices']['sub-yearly'] ?? null;
        if (($monthly_sub && isset($monthly_sub['productId'])) || ($yearly_sub && isset($yearly_sub['productId']))) {
            echo '<div class="mco-subscription-grid">';
            if ($monthly_sub && isset($monthly_sub['productId'])) {
                $monthly_url = get_site_url() . '/cart/?add-to-cart=' . $monthly_sub['productId'];
                echo '<div class="mco-card mco-gradient--sub-monthly"><h3 class="mco-sub-card__title">Monthly Subscription</h3><p class="mco-sub-card__description">Perfect for focused, short-term preparation.</p><div class="mco-sub-card__price">';
                if (isset($monthly_sub['regularPrice']) && $monthly_sub['regularPrice'] > $monthly_sub['price']) echo '<span style="font-size: 1.25rem; text-decoration: line-through; opacity: 0.7;">$' . number_format_i18n($monthly_sub['regularPrice'], 2) . '</span> ';
                echo '<span class="mco-sub-card__price-value">$' . number_format_i18n($monthly_sub['price'], 2) . '</span><span class="mco-sub-card__price-unit">/month</span></div><ul class="mco-sub-card__features"><li>' . mco_get_svg_icon('check') . '<span>Unlimited Access to ALL Practice Exams</span></li><li>' . mco_get_svg_icon('check') . '<span>Unlimited AI-Powered Feedback & Study Guides</span></li><li>' . mco_get_svg_icon('check') . '<span>Cancel Anytime</span></li></ul><div class="mco-card__footer"><a href="' . esc_url($monthly_url) . '" class="mco-card__button mco-card__button--primary">Subscribe Now</a></div></div>';
            }
            if ($yearly_sub && isset($yearly_sub['productId'])) {
                $yearly_url = get_site_url() . '/cart/?add-to-cart=' . $yearly_sub['productId'];
                echo '<div class="mco-card mco-gradient--sub-yearly mco-card--best-value"><div class="mco-best-value-tag">' . mco_get_svg_icon('star') . ' Best Value</div><h3 class="mco-sub-card__title">Yearly Subscription</h3><p class="mco-sub-card__description">For continuous learning and preparing for multiple certifications.</p><div class="mco-sub-card__price">';
                if (isset($yearly_sub['regularPrice']) && $yearly_sub['regularPrice'] > $yearly_sub['price']) echo '<span style="font-size: 1.25rem; text-decoration: line-through; opacity: 0.7;">$' . number_format_i18n($yearly_sub['regularPrice'], 2) . '</span> ';
                echo '<span class="mco-sub-card__price-value">$' . number_format_i18n($yearly_sub['price'], 2) . '</span><span class="mco-sub-card__price-unit">/year</span></div><p style="text-align:center; font-size: 0.875rem; color: #fcd34d; font-weight: 600;">Saves over 35%!</p><ul class="mco-sub-card__features"><li>' . mco_get_svg_icon('check') . '<span>All Monthly features</span></li><li>' . mco_get_svg_icon('check') . '<span>Access All Exam Programs</span></li><li>' . mco_get_svg_icon('check') . '<span>Billed Annually</span></li></ul><div class="mco-card__footer"><a href="' . esc_url($yearly_url) . '" class="mco-card__button mco-card__button--primary">Subscribe & Save</a></div></div>';
            }
            echo '</div>';
        }
    }

    echo '<div class="mco-showcase-grid">';
    foreach ($programs as $program_post) {
        $app_program_id = 'prod-' . $program_post->ID;
        $program_category = current(array_filter($config_data['examProductCategories'], function($c) use ($app_program_id) { return $c['id'] === $app_program_id; }));
        if (!$program_category) continue;
        
        $practice_exam = current(array_filter($config_data['exams'], function($e) use ($program_category) { return $e['id'] === $program_category['practiceExamId']; }));
        $cert_exam = current(array_filter($config_data['exams'], function($e) use ($program_category) { return $e['id'] === $program_category['certificationExamId']; }));
        
        $program_link_url = rtrim($app_url, '/') . '/program/' . $app_program_id;

        echo '<div class="mco-program-group" id="' . esc_attr($app_program_id) . '"><a href="' . esc_url($program_link_url) . '"><h2 class="mco-program-group__title">' . esc_html($program_category['name']) . '</h2></a><div class="mco-program-group__description">' . wp_kses_post($program_category['description']) . '</div><div class="mco-program-group__cards">';

        if ($practice_exam) {
            echo '<div class="mco-card mco-gradient--practice-1"><div class="mco-card__header"><span>' . mco_get_svg_icon('practice') . '</span> Practice Exam</div><div class="mco-card__body"><h3 class="mco-card__subtitle">' . esc_html($practice_exam['name']) . '</h3><div class="mco-card__stats"><span>' . esc_html($practice_exam['numberOfQuestions']) . ' Qs</span><span>' . esc_html($practice_exam['durationMinutes']) . ' Mins</span><span>' . esc_html($practice_exam['passScore']) . '% Pass</span></div></div><div class="mco-card__footer"><a href="' . esc_url(mco_get_exam_app_url() . '/test/' . $practice_exam['id']) . '" class="mco-card__button mco-card__button--primary">Start Practice</a></div></div>';
        }

        if ($cert_exam) {
            $product_id = wc_get_product_id_by_sku($cert_exam['productSku']);
            $is_purchased = false;
            if (is_user_logged_in()) {
                $user_id = get_current_user_id();
                $is_purchased = $is_subscribed || ($product_id ? wc_customer_bought_product('', $user_id, $product_id) : false);
            }
            $button_text = $is_purchased ? 'Start Exam' : 'Add to Cart';
            $button_icon = $is_purchased ? mco_get_svg_icon('practice') : mco_get_svg_icon('cart');
            $button_url = $is_purchased ? mco_get_exam_app_url() . '/test/' . $cert_exam['id'] : ($product_id ? get_site_url() . '/cart/?add-to-cart=' . $product_id : '#');
            $button_class = $is_purchased ? 'mco-card__button--primary' : 'mco-card__button--purchase';

            echo '<div class="mco-card mco-gradient--cert-1"><div class="mco-card__header"><span>' . mco_get_svg_icon('cert') . '</span> Certification Exam</div><div class="mco-card__body"><h3 class="mco-card__subtitle">' . esc_html($cert_exam['name']) . '</h3>';
            if (!$is_purchased && $cert_exam['price'] > 0) {
                echo '<div style="text-align: center; margin-bottom: 1rem;">';
                if ($cert_exam['regularPrice'] > $cert_exam['price']) echo '<span style="font-size: 1.25rem; text-decoration: line-through; opacity: 0.7;">$' . number_format_i18n($cert_exam['regularPrice'], 2) . '</span>';
                echo '<span style="font-size: 2.5rem; font-weight: 800; margin-left: 0.5rem;">$' . number_format_i18n($cert_exam['price'], 2) . '</span></div>';
            }
            echo '<div class="mco-card__stats"><span>' . esc_html($cert_exam['numberOfQuestions']) . ' Qs</span><span>' . esc_html($cert_exam['durationMinutes']) . ' Mins</span><span>' . esc_html($cert_exam['passScore']) . '% Pass</span></div></div><div class="mco-card__footer"><a href="' . esc_url($button_url) . '" class="mco-card__button ' . $button_class . '">' . $button_icon . ' ' . $button_text . '</a></div></div>';

            if ($bundles_enabled) {
                $subscription_bundle_sku = $cert_exam['productSku'] . '-1mo-addon';
                $practice_bundle_sku = $cert_exam['productSku'] . '-1';

                if ($subscriptions_enabled && isset($config_data['examPrices'][$subscription_bundle_sku])) {
                    $bundle_data = $config_data['examPrices'][$subscription_bundle_sku];
                    $bundle_url = isset($bundle_data['productId']) ? get_site_url() . '/cart/?add-to-cart=' . $bundle_data['productId'] : '#';
                    echo '<div class="mco-card mco-gradient