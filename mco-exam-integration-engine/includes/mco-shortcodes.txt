<?php
if (!defined('ABSPATH')) exit;

// --- ICON HELPER ---
function mco_get_svg_icon($name) {
    $icons = [
        'practice' => '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"/><path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"/></svg>',
        'cert' => '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="8" r="6"/><path d="M15.477 12.89 17 22l-5-3-5 3 1.523-9.11"/></svg>',
        'cart' => '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="9" cy="21" r="1"/><circle cx="20" cy="21" r="1"/><path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"/></svg>',
        'bundle' => '<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M6 2 3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4Z"/><path d="M3 6h18"/><path d="M16 10a4 4 0 0 1-8 0"/></svg>',
        'check' => '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"><path d="M20 6 9 17l-5-5"/></svg>',
        'star' => '<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="currentColor" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"/></svg>',
    ];
    return $icons[$name] ?? '';
}

// --- HELPER FUNCTIONS FOR PROCEDURAL BOOK COVERS ---
function mco_render_annapoorna_style_a($book, $color_index) {
    $colors = [
        ['bg' => '#0369a1', 'pattern' => '#075985', 'text' => '#ffffff'],
        ['bg' => '#059669', 'pattern' => '#065f46', 'text' => '#ffffff'],
        ['bg' => '#be185d', 'pattern' => '#9d174d', 'text' => '#ffffff'],
        ['bg' => '#7e22ce', 'pattern' => '#6b21a8', 'text' => '#ffffff'],
        ['bg' => '#334155', 'pattern' => '#1e293b', 'text' => '#ffffff'],
    ];
    $color = $colors[$color_index % 5];
    ob_start();
    ?>
    <div class="mco-book-cover mco-proc-cover-annapoorna-a" style="color: <?php echo esc_attr($color['text']); ?>;">
        <div class="mco-proc-cover-annapoorna-a__bg" style="background-color: <?php echo esc_attr($color['bg']); ?>;"></div>
        <div class="mco-proc-cover-annapoorna-a__pattern-bg" style="background-color: <?php echo esc_attr($color['pattern']); ?>;">
             <svg width="100%" height="100%" class="mco-proc-cover-annapoorna-a__pattern-svg">
                <defs><pattern id="mco-annapoorna-pattern-a-php" patternUnits="userSpaceOnUse" width="20" height="20"><circle cx="10" cy="10" r="1" fill="white" /></pattern></defs>
                <rect width="100%" height="100%" fill="url(#mco-annapoorna-pattern-a-php)" />
            </svg>
        </div>
        <div class="mco-proc-cover-annapoorna-a__content">
            <span class="mco-proc-cover-annapoorna-a__super-title">Study Material</span>
            <h4 class="mco-proc-cover-annapoorna-a__title"><?php echo esc_html($book['title']); ?></h4>
        </div>
    </div>
    <?php
    return ob_get_clean();
}

function mco_render_annapoorna_style_b($book, $color_index) {
    $colors = [
        ['bg' => '#fef08a', 'shape' => '#facc15', 'text' => '#713f12'],
        ['bg' => '#d9f99d', 'shape' => '#a3e635', 'text' => '#3f6212'],
        ['bg' => '#cffafe', 'shape' => '#67e8f9', 'text' => '#155e75'],
        ['bg' => '#f5d0fe', 'shape' => '#e879f9', 'text' => '#701a75'],
        ['bg' => '#e5e7eb', 'shape' => '#9ca3af', 'text' => '#1f2937'],
    ];
    $color = $colors[$color_index % 5];
    ob_start();
    ?>
    <div class="mco-book-cover mco-proc-cover-annapoorna-b" style="background-color: <?php echo esc_attr($color['bg']); ?>; color: <?php echo esc_attr($color['text']); ?>;">
        <div class="mco-proc-cover-annapoorna-b__shape" style="background-color: <?php echo esc_attr($color['shape']); ?>;"></div>
        <div class="mco-proc-cover-annapoorna-b__content">
            <h4 class="mco-proc-cover-annapoorna-b__title"><?php echo esc_html($book['title']); ?></h4>
            <span class="mco-proc-cover-annapoorna-b__super-title">Official Guide</span>
        </div>
    </div>
    <?php
    return ob_get_clean();
}

function mco_render_mco_style_a($book, $color_index) {
    $title_words = explode(' ', $book['title']);
    $bg_word_candidates = array_filter($title_words, function($w) { return strlen($w) > 4; });
    $bg_word = strtoupper(empty($bg_word_candidates) ? ($title_words[0] ?? '') : current($bg_word_candidates));

    ob_start();
    ?>
     <div class="mco-book-cover mco-proc-cover-mco-a mco-proc-cover-mco-a--color-<?php echo ($color_index % 4); ?>">
        <span class="mco-proc-cover-mco-a__bg-word"><?php echo esc_html($bg_word); ?></span>
        <div class="mco-proc-cover-mco-a__content">
             <h4 class="mco-proc-cover-mco-a__title"><?php echo esc_html($book['title']); ?></h4>
        </div>
    </div>
    <?php
    return ob_get_clean();
}

function mco_render_mco_style_b($book, $color_index) {
    ob_start();
    ?>
    <div class="mco-book-cover mco-proc-cover-mco-b mco-proc-cover-mco-b--color-<?php echo ($color_index % 4); ?>">
        <div class="mco-proc-cover-mco-b__accent"></div>
        <div class="mco-proc-cover-mco-b__content">
            <span class="mco-proc-cover-mco-b__super-title">Reference Material</span>
            <h4 class="mco-proc-cover-mco-b__title"><?php echo esc_html($book['title']); ?></h4>
        </div>
        <div class="mco-proc-cover-mco-b__logo-mark">MCO</div>
    </div>
    <?php
    return ob_get_clean();
}

function mco_render_annapoorna_procedural_cover_php($book) {
    $hash = 0; $str = $book['title'];
    for ($i = 0; $i < strlen($str); $i++) { $hash = ord($str[$i]) + (($hash << 5) - $hash); }
    $style_index = abs($hash) % 2;
    $color_index = floor(abs($hash) / 2);
    return ($style_index === 0) ? mco_render_annapoorna_style_a($book, $color_index) : mco_render_annapoorna_style_b($book, $color_index);
}

function mco_render_mco_procedural_cover_php($book) {
    $hash = 0; $str = $book['title'];
    for ($i = 0; $i < strlen($str); $i++) { $hash = ord($str[$i]) + (($hash << 5) - $hash); }
    $style_index = abs($hash) % 2;
    $color_index = floor(abs($hash) / 2);
    return ($style_index === 0) ? mco_render_mco_style_a($book, $color_index) : mco_render_mco_style_b($book, $color_index);
}

// --- NEW HELPER FOR GEO-TARGETED LINKS ---
function mco_get_geo_primary_link_info($links) {
    if (empty($links) || !is_array($links)) return null;
    $links = array_filter($links);
    if (empty($links)) return null;

    // A simple server-side priority. Can be expanded with GeoIP if needed.
    $priority = ['in', 'ae', 'com'];
    
    foreach ($priority as $key) {
        if (!empty($links[$key])) {
            $store_map = ['com' => 'Amazon.com', 'in' => 'Amazon.in', 'ae' => 'Amazon.ae'];
            return [ 'key' => $key, 'url' => $links[$key], 'domainName' => $store_map[$key] ];
        }
    }
    
    // Fallback to the first available link if no priority links found.
    $first_key = array_key_first($links);
    if ($first_key) {
        $store_map = ['com' => 'Amazon.com', 'in' => 'Amazon.in', 'ae' => 'Amazon.ae'];
        return [ 'key' => $first_key, 'url' => $links[$first_key], 'domainName' => $store_map[$first_key] ?? 'Amazon.com' ];
    }
    
    return null;
}


// --- REGISTRATION FORM MODIFICATION ---
if (!function_exists('mco_add_fullname_to_registration_form')) {
    function mco_add_fullname_to_registration_form() {
        ?>
        <p>
            <label for="full_name"><?php _e('Full Name (for Certificate)', 'mco-exam-engine'); ?><br />
            <input type="text" name="full_name" id="full_name" class="input" value="<?php echo (isset($_POST['full_name']) ? esc_attr(wp_unslash($_POST['full_name'])) : ''); ?>" size="25" required /></label>
        </p>
        <?php
    }
}
if (!function_exists('mco_validate_fullname_on_registration')) {
    function mco_validate_fullname_on_registration($errors, $sanitized_user_login, $user_email) {
        if (empty($_POST['full_name']) || !is_string($_POST['full_name'])) {
            $errors->add('fullname_error', __('<strong>ERROR</strong>: You must include your full name.', 'mco-exam-engine'));
        } elseif (strpos(trim($_POST['full_name']), ' ') === false) {
            $errors->add('fullname_error', __('<strong>ERROR</strong>: Please enter both your first and last name.', 'mco-exam-engine'));
        }
        return $errors;
    }
}
if (!function_exists('mco_save_fullname_on_registration')) {
    function mco_save_fullname_on_registration($user_id) {
        if (isset($_POST['full_name'])) {
            $full_name = sanitize_text_field($_POST['full_name']);
            wp_update_user(['ID' => $user_id, 'display_name' => $full_name]);
            $name_parts = explode(' ', $full_name, 2);
            update_user_meta($user_id, 'first_name', $name_parts[0]);
            update_user_meta($user_id, 'last_name', $name_parts[1] ?? '');
        }
    }
}

// --- HELPER FUNCTIONS FOR LOGIN SHORTCODE ---
if (!function_exists('mco_redirect_to_app_with_token')) {
    function mco_redirect_to_app_with_token() {
        $app_url = mco_get_exam_app_url();
        if (!$app_url) return '<p>Exam application URL is not configured.</p>';
        $token = mco_generate_exam_jwt(get_current_user_id());
        if (!$token) return '<p>Could not generate authentication token.</p>';
        $redirect_url = add_query_arg('token', $token, rtrim($app_url, '/') . '/auth');
        if (!headers_sent()) {
            wp_redirect($redirect_url);
            exit;
        }
        return '<div class="mco-redirect-message">Redirecting you to the exam portal... <a href="' . esc_url($redirect_url) . '">Click here if you are not redirected</a>.</div><script>window.location.href="' . esc_url($redirect_url) . '";</script>';
    }
}
if (!function_exists('mco_render_name_update_form')) {
    function mco_render_name_update_form($error_message = '') {
        ob_start();
        ?>
        <div id="mco-name-update-form" class="mco-form-container">
            <h2>Update Your Name</h2>
            <p>Your name will be printed on your certificate. Please provide your full name before proceeding to the exam portal.</p>
            <?php if ($error_message): ?>
                <p class="mco-error"><?php echo esc_html($error_message); ?></p>
            <?php endif; ?>
            <form method="post" action="">
                <?php wp_nonce_field('mco_update_name_action', 'mco_update_name_nonce'); ?>
                <div>
                    <label for="full_name">Full Name</label>
                    <input type="text" id="full_name" name="full_name" required value="<?php echo esc_attr(wp_get_current_user()->display_name); ?>">
                </div>
                <button type="submit">Save and Continue</button>
            </form>
        </div>
        <?php
        return ob_get_clean();
    }
}


// --- HOOKS ---
if (!function_exists('mco_register_shortcode_hooks')) {
    function mco_register_shortcode_hooks() {
        add_shortcode('mco_exam_login', 'mco_exam_login_shortcode');
        add_shortcode('mco_exam_showcase', 'mco_exam_showcase_shortcode');
        add_shortcode('exam_program', 'mco_exam_showcase_shortcode'); // Alias
        add_shortcode('mco_book_showcase', 'mco_book_showcase_shortcode');
        add_shortcode('mco_single_book', 'mco_single_book_shortcode');
        
        add_action('wp_enqueue_scripts', 'mco_enqueue_shortcode_styles');
        add_action('wp', 'mco_prevent_caching_on_shortcode_pages');

        add_filter('the_content', 'mco_auto_apply_single_book_style', 999);
        add_filter('the_content', 'mco_auto_apply_single_program_style', 999);

        add_action('register_form', 'mco_add_fullname_to_registration_form');
        add_filter('registration_errors', 'mco_validate_fullname_on_registration', 10, 3);
        add_action('user_register', 'mco_save_fullname_on_registration');
    }
}

if (!function_exists('mco_auto_apply_single_book_style')) {
    function mco_auto_apply_single_book_style($content) {
        if (is_singular('mco_recommended_book') && in_the_loop() && is_main_query() && !is_admin()) {
            if (has_shortcode($content, 'mco_single_book')) {
                return $content;
            }
            remove_filter('the_content', 'mco_auto_apply_single_book_style', 999);
            $new_content = mco_single_book_shortcode([]);
            add_filter('the_content', 'mco_auto_apply_single_book_style', 999);
            return $new_content;
        }
        return $content;
    }
}

if (!function_exists('mco_auto_apply_single_program_style')) {
    function mco_auto_apply_single_program_style($content) {
        if (is_singular('mco_exam_program') && in_the_loop() && is_main_query() && !is_admin()) {
            global $post;
            $app_id = 'prod-' . $post->ID;
            
            // To prevent infinite loops if the shortcode itself calls the_content
            remove_filter('the_content', 'mco_auto_apply_single_program_style', 999);
            
            $shortcode_output = mco_exam_showcase_shortcode(['id' => $app_id]);
            
            // Re-add the filter for subsequent posts on the page (though unlikely for a singular view)
            add_filter('the_content', 'mco_auto_apply_single_program_style', 999);

            // Return ONLY our shortcode output, overwriting everything else.
            return $shortcode_output;
        }
        return $content;
    }
}

if (!function_exists('mco_prevent_caching_on_shortcode_pages')) {
    function mco_prevent_caching_on_shortcode_pages() {
        if (is_admin()) return;
        global $post;
        if (is_a($post, 'WP_Post') && (
            has_shortcode($post->post_content, 'mco_exam_showcase') ||
            has_shortcode($post->post_content, 'exam_program') ||
            has_shortcode($post->post_content, 'mco_book_showcase') ||
            has_shortcode($post->post_content, 'mco_single_book') ||
            has_shortcode($post->post_content, 'mco_exam_login') ||
            is_singular('mco_recommended_book')
        )) {
            if (!defined('DONOTCACHEPAGE')) define('DONOTCACHEPAGE', true);
        }
    }
}

// --- STYLES ---
if (!function_exists('mco_enqueue_shortcode_styles')) {
    function mco_enqueue_shortcode_styles() {
        wp_enqueue_style('mco-styles', MCO_PLUGIN_URL . 'assets/mco-styles.css', [], MCO_PLUGIN_VERSION);
    }
}

// --- SHORTCODE IMPLEMENTATIONS ---

function mco_exam_login_shortcode() {
    // 1. Handle name update for logged-in user
    if (is_user_logged_in() && isset($_POST['mco_update_name_nonce']) && wp_verify_nonce($_POST['mco_update_name_nonce'], 'mco_update_name_action')) {
        $full_name = sanitize_text_field($_POST['full_name']);
        if (!empty($full_name) && strpos(trim($full_name), ' ') !== false) {
            $user_id = get_current_user_id();
            wp_update_user(['ID' => $user_id, 'display_name' => $full_name]);
            $name_parts = explode(' ', $full_name, 2);
            update_user_meta($user_id, 'first_name', $name_parts[0]);
            if (isset($name_parts[1])) {
                update_user_meta($user_id, 'last_name', $name_parts[1]);
            }
            return mco_redirect_to_app_with_token();
        } else {
            return mco_render_name_update_form('Please enter your full first and last name.');
        }
    }

    // 2. Handle login attempt from logged-out user
    if (!is_user_logged_in() && isset($_POST['mco_login_nonce']) && wp_verify_nonce($_POST['mco_login_nonce'], 'mco_login_action')) {
        $creds = [
            'user_login'    => sanitize_user($_POST['log']),
            'user_password' => $_POST['pwd'],
            'remember'      => isset($_POST['rememberme']),
        ];
        $user = wp_signon($creds, is_ssl());

        if (is_wp_error($user)) {
            $login_error = $user->get_error_message();
        } else {
            // Success! The page will reload, and the logged-in user logic below will run.
            wp_redirect(remove_query_arg('login_error', get_permalink()));
            exit;
        }
    }

    // 3. Check logged-in user's status (runs after successful login/redirect or on initial page load)
    if (is_user_logged_in()) {
        $user = wp_get_current_user();
        if (strpos($user->display_name, ' ') !== false) {
            return mco_redirect_to_app_with_token();
        } else {
            return mco_render_name_update_form();
        }
    }

    // 4. Render login form for logged-out user
    ob_start();
    ?>
    <div class="mco-form-container" id="mco-login-form-custom">
        <h2>Login to Your Account</h2>
        <?php if (isset($login_error)): ?>
            <p class="mco-error"><?php echo esc_html($login_error); ?></p>
        <?php endif; ?>
        <form name="loginform" id="loginform" action="<?php echo esc_url(get_permalink()); ?>" method="post">
            <p class="login-username">
                <label for="user_login">Username or Email Address</label>
                <input type="text" name="log" id="user_login" class="input" value="" size="20" required>
            </p>
            <p class="login-password">
                <label for="user_pass">Password</label>
                <input type="password" name="pwd" id="user_pass" class="input" value="" size="20" required>
            </p>
            <p class="login-remember">
                <label><input name="rememberme" type="checkbox" id="rememberme" value="forever"> Remember Me</label>
            </p>
            <p class="login-submit">
                <input type="submit" name="wp-submit" id="wp-submit" class="button button-primary" value="Log In">
            </p>
            <?php wp_nonce_field('mco_login_action', 'mco_login_nonce'); ?>
        </form>
        <div class="mco-login-links">
            <?php if (get_option('users_can_register')): ?>
                <a href="<?php echo esc_url(wp_registration_url()); ?>">Register</a> | 
            <?php endif; ?>
            <a href="<?php echo esc_url(wp_lostpassword_url()); ?>">Lost your password?</a>
        </div>
        <?php if (!get_option('users_can_register')): ?>
             <p class="mco-register-disabled-notice">Registration is currently disabled. Please contact the site administrator if you need an account.</p>
        <?php endif; ?>
    </div>
    <?php
    return ob_get_clean();
}


function mco_exam_showcase_shortcode($atts) {
    $atts = shortcode_atts(['id' => ''], $atts, 'exam_program');
    $program_id_str = sanitize_text_field($atts['id']);
    
    $query_args = ['post_type' => 'mco_exam_program', 'posts_per_page' => -1, 'post_status' => 'publish', 'orderby' => 'title', 'order' => 'ASC'];
    if (!empty($program_id_str)) {
        $post_id_from_app_id = (int) str_replace('prod-', '', $program_id_str);
        if ($post_id_from_app_id > 0) $query_args['p'] = $post_id_from_app_id;
        else { $query_args['name'] = $program_id_str; $query_args['posts_per_page'] = 1; }
    }
    
    $programs = get_posts($query_args);
    if (empty($programs)) return '<p>No exam programs found.</p>';
    
    $config_data = mco_get_app_config_data();
    $app_url = mco_get_exam_app_url();
    if (!$config_data || !$app_url) return '<p>Application is not configured correctly.</p>';

    ob_start();
    
    $subscriptions_enabled = get_option('mco_subscriptions_enabled', '1') === '1';
    $bundles_enabled = get_option('mco_bundles_enabled', '1') === '1';
    $is_subscribed = (is_user_logged_in() && class_exists('WC_Subscriptions') && function_exists('wcs_user_has_subscription') && wcs_user_has_subscription(get_current_user_id(), '', 'active'));
    
    echo '<div class="mco-showcase-layout">';
    echo '<div class="mco-showcase-main">';
    
    if (!$is_subscribed && empty($program_id_str) && $subscriptions_enabled) {
        $monthly_sub = $config_data['examPrices']['sub-monthly'] ?? null;
        $yearly_sub = $config_data['examPrices']['sub-yearly'] ?? null;
        if (($monthly_sub && isset($monthly_sub['productId'])) || ($yearly_sub && isset($yearly_sub['productId']))) {
            echo '<div class="mco-subscription-grid">';
            if ($monthly_sub && isset($monthly_sub['productId'])) {
                $monthly_url = get_site_url() . '/cart/?add-to-cart=' . $monthly_sub['productId'];
                echo '<div class="mco-card mco-gradient--sub-monthly"><h3 class="mco-sub-card__title">Monthly Subscription</h3><p class="mco-sub-card__description">Perfect for focused, short-term preparation.</p><div class="mco-sub-card__price">';
                if (isset($monthly_sub['regularPrice']) && $monthly_sub['regularPrice'] > $monthly_sub['price']) echo '<span style="font-size: 1.25rem; text-decoration: line-through; opacity: 0.7;">$' . number_format_i18n($monthly_sub['regularPrice'], 2) . '</span> ';
                echo '<span class="mco-sub-card__price-value">$' . number_format_i18n($monthly_sub['price'], 2) . '</span><span class="mco-sub-card__price-unit">/month</span></div><ul class="mco-sub-card__features"><li>' . mco_get_svg_icon('check') . '<span>Unlimited Access to ALL Practice Exams</span></li><li>' . mco_get_svg_icon('check') . '<span>Unlimited AI-Powered Feedback & Study Guides</span></li><li>' . mco_get_svg_icon('check') . '<span>Cancel Anytime</span></li></ul><div class="mco-card__footer"><a href="' . esc_url($monthly_url) . '" class="mco-card__button mco-card__button--primary">Subscribe Now</a></div></div>';
            }
            if ($yearly_sub && isset($yearly_sub['productId'])) {
                $yearly_url = get_site_url() . '/cart/?add-to-cart=' . $yearly_sub['productId'];
                echo '<div class="mco-card mco-gradient--sub-yearly mco-card--best-value"><div class="mco-best-value-tag">' . mco_get_svg_icon('star') . ' Best Value</div><h3 class="mco-sub-card__title">Yearly Subscription</h3><p class="mco-sub-card__description">For continuous learning and preparing for multiple certifications.</p><div class="mco-sub-card__price">';
                if (isset($yearly_sub['regularPrice']) && $yearly_sub['regularPrice'] > $yearly_sub['price']) echo '<span style="font-size: 1.25rem; text-decoration: line-through; opacity: 0.7;">$' . number_format_i18n($yearly_sub['regularPrice'], 2) . '</span> ';
                echo '<span class="mco-sub-card__price-value">$' . number_format_i18n($yearly_sub['price'], 2) . '</span><span class="mco-sub-card__price-unit">/year</span></div><p style="text-align:center; font-size: 0.875rem; color: #fcd34d; font-weight: 600;">Saves over 35%!</p><ul class="mco-sub-card__features"><li>' . mco_get_svg_icon('check') . '<span>All Monthly features</span></li><li>' . mco_get_svg_icon('check') . '<span>Access All Exam Programs</span></li><li>' . mco_get_svg_icon('check') . '<span>Billed Annually</span></li></ul><div class="mco-card__footer"><a href="' . esc_url($yearly_url) . '" class="mco-card__button mco-card__button--primary">Subscribe & Save</a></div></div>';
            }
            echo '</div>';
        }
    }

    echo '<div class="mco-showcase-grid">';
    foreach ($programs as $program_post) {
        $app_program_id = 'prod-' . $program_post->ID;
        $program_category = current(array_filter($config_data['examProductCategories'], function($c) use ($app_program_id) { return $c['id'] === $app_program_id; }));
        if (!$program_category) continue;
        
        $practice_exam = current(array_filter($config_data['exams'], function($e) use ($program_category) { return $e['id'] === $program_category['practiceExamId']; }));
        $cert_exam = current(array_filter($config_data['exams'], function($e) use ($program_category) { return $e['id'] === $program_category['certificationExamId']; }));
        
        $program_link_url = rtrim($app_url, '/') . '/program/' . $app_program_id;

        echo '<div class="mco-program-group" id="' . esc_attr($app_program_id) . '"><a href="' . esc_url($program_link_url) . '"><h2 class="mco-program-group__title">' . esc_html($program_category['name']) . '</h2></a><div class="mco-program-group__description">' . $program_category['description'] . '</div><div class="mco-program-group__cards">';

        if ($practice_exam) {
            echo '<div class="mco-card mco-gradient--practice-1"><div class="mco-card__header"><span>' . mco_get_svg_icon('practice') . '</span> Practice Exam</div><div class="mco-card__body"><h3 class="mco-card__subtitle">' . esc_html($practice_exam['name']) . '</h3><div class="mco-card__stats"><span>' . esc_html($practice_exam['numberOfQuestions']) . ' Qs</span><span>' . esc_html($practice_exam['durationMinutes']) . ' Mins</span><span>' . esc_html($practice_exam['passScore']) . '% Pass</span></div></div><div class="mco-card__footer"><a href="' . esc_url(mco_get_exam_app_url() . '/test/' . $practice_exam['id']) . '" class="mco-card__button mco-card__button--primary">Start Practice</a></div></div>';
        }

        if ($cert_exam) {
            $product_id = wc_get_product_id_by_sku($cert_exam['productSku']);
            $is_purchased = false;
            if (is_user_logged_in()) {
                $user_id = get_current_user_id();
                $is_purchased = $is_subscribed || ($product_id ? wc_customer_bought_product('', $user_id, $product_id) : false);
            }
            $button_text = $is_purchased ? 'Start Exam' : 'Add to Cart';
            $button_icon = $is_purchased ? mco_get_svg_icon('practice') : mco_get_svg_icon('cart');
            $button_url = $is_purchased ? mco_get_exam_app_url() . '/test/' . $cert_exam['id'] : ($product_id ? get_site_url() . '/cart/?add-to-cart=' . $product_id : '#');
            $button_class = $is_purchased ? 'mco-card__button--primary' : 'mco-card__button--purchase';

            echo '<div class="mco-card mco-gradient--cert-1"><div class="mco-card__header"><span>' . mco_get_svg_icon('cert') . '</span> Certification Exam</div><div class="mco-card__body"><h3 class="mco-card__subtitle">' . esc_html($cert_exam['name']) . '</h3>';
            if (!$is_purchased && $cert_exam['price'] > 0) {
                echo '<div style="text-align: center; margin-bottom: 1rem;">';
                if ($cert_exam['regularPrice'] > $cert_exam['price']) echo '<span style="font-size: 1.25rem; text-decoration: line-through; opacity: 0.7;">$' . number_format_i18n($cert_exam['regularPrice'], 2) . '</span>';
                echo '<span style="font-size: 2.5rem; font-weight: 800; margin-left: 0.5rem;">$' . number_format_i18n($cert_exam['price'], 2) . '</span></div>';
            }
            echo '<div class="mco-card__stats"><span>' . esc_html($cert_exam['numberOfQuestions']) . ' Qs</span><span>' . esc_html($cert_exam['durationMinutes']) . ' Mins</span><span>' . esc_html($cert_exam['passScore']) . '% Pass</span></div></div><div class="mco-card__footer"><a href="' . esc_url($button_url) . '" class="mco-card__button ' . $button_class . '">' . $button_icon . ' ' . $button_text . '</a></div></div>';

            if ($bundles_enabled) {
                $subscription_bundle_sku = $cert_exam['productSku'] . '-1mo-addon';
                $practice_bundle_sku = $cert_exam['productSku'] . '-1';

                if ($subscriptions_enabled && isset($config_data['examPrices'][$subscription_bundle_sku])) {
                    $bundle_data = $config_data['examPrices'][$subscription_bundle_sku];
                    $bundle_url = isset($bundle_data['productId']) ? get_site_url() . '/cart/?add-to-cart=' . $bundle_data['productId'] : '#';
                    echo '<div class="mco-card mco-gradient--bundle-sub"><div class="mco-card__header"><span>' . mco_get_svg_icon('bundle') . '</span> Exam + Subscription</div><div class="mco-card__body"><h3 class="mco-card__subtitle">Get This Exam PLUS 1-Month Full Access</h3>';
                    if (isset($bundle_data['price'])) {
                        echo '<div style="text-align: center; margin-bottom: 1rem;">';
                        if ($bundle_data['regularPrice'] > $bundle_data['price']) echo '<span style="font-size: 1.25rem; text-decoration: line-through; opacity: 0.7;">$' . number_format_i18n($bundle_data['regularPrice'], 2) . '</span>';
                        echo '<span style="font-size: 2.5rem; font-weight: 800; margin-left: 0.5rem;">$' . number_format_i18n($bundle_data['price'], 2) . '</span></div>';
                    }
                    echo '</div><div class="mco-card__footer"><a href="' . esc_url($bundle_url) . '" class="mco-card__button mco-card__button--purchase">' . mco_get_svg_icon('cart') . ' Purchase Bundle</a></div></div>';
                } elseif (isset($config_data['examPrices'][$practice_bundle_sku])) {
                     $bundle_data = $config_data['examPrices'][$practice_bundle_sku];
                     $bundle_url = isset($bundle_data['productId']) ? get_site_url() . '/cart/?add-to-cart=' . $bundle_data['productId'] : '#';
                     echo '<div class="mco-card mco-gradient--bundle-practice"><div class="mco-card__header"><span>' . mco_get_svg_icon('bundle') . '</span> Exam Bundle</div><div class="mco-card__body"><h3 class="mco-card__subtitle">Get This Exam PLUS 1-Month Practice Access</h3>';
                     if (isset($bundle_data['price'])) {
                         echo '<div style="text-align: center; margin-bottom: 1rem;">';
                         if ($bundle_data['regularPrice'] > $bundle_data['price']) echo '<span style="font-size: 1.25rem; text-decoration: line-through; opacity: 0.7;">$' . number_format_i18n($bundle_data['regularPrice'], 2) . '</span>';
                         echo '<span style="font-size: 2.5rem; font-weight: 800; margin-left: 0.5rem;">$' . number_format_i18n($bundle_data['price'], 2) . '</span></div>';
                     }
                     echo '</div><div class="mco-card__footer"><a href="' . esc_url($bundle_url) . '" class="mco-card__button mco-card__button--purchase">' . mco_get_svg_icon('cart') . ' Purchase Bundle</a></div></div>';
                }
            }
        }
        echo '</div></div>';
    }
    echo '</div>'; // end showcase-grid
    echo '</div>'; // end showcase-main
    echo '<div class="mco-study-hall-sidebar">';
    echo mco_render_study_hall_sidebar();
    echo '</div>'; // end sidebar
    echo '</div>'; // end layout

    return ob_get_clean();
}

function mco_book_showcase_shortcode() {
    $config_data = mco_get_app_config_data();
    if (empty($config_data['suggestedBooks'])) return '<p>No recommended books found.</p>';

    ob_start();
    echo '<div class="mco-book-grid">';
    foreach ($config_data['suggestedBooks'] as $book) {
        $book_cover = '';
        if (!empty($book['thumbnailUrl'])) {
            $book_cover = '<img src="' . esc_url($book['thumbnailUrl']) . '" alt="' . esc_attr($book['title']) . '" style="width:100%; height:100%; object-fit: cover;">';
        } else {
            $site_host = parse_url(home_url(), PHP_URL_HOST);
            if (strpos($site_host, 'coding-online') !== false) {
                $book_cover = mco_render_mco_procedural_cover_php($book);
            } else {
                $book_cover = mco_render_annapoorna_procedural_cover_php($book);
            }
        }

        echo '<div class="mco-card">';
        echo '<div class="mco-book-cover">' . $book_cover . '</div>';
        echo '<div class="mco-card__body">';
        echo '<a href="' . esc_url($book['permalink']) . '" target="_blank" rel="noopener noreferrer"><h3 class="mco-card__title">' . esc_html($book['title']) . '</h3></a>';
        echo '<p class="mco-card__description">' . esc_html($book['description']) . '</p>';
        echo '</div><div class="mco-card__footer">';

        $links = array_filter($book['affiliateLinks']);
        if (!empty($links)) {
            $primary_link_info = mco_get_geo_primary_link_info($links);
            $store_map = ['com' => 'Amazon.com', 'in' => 'Amazon.in', 'ae' => 'Amazon.ae'];

            foreach($links as $key => $url) {
                $is_primary = ($primary_link_info && $key === $primary_link_info['key']);
                $button_class = $is_primary ? 'mco-book-button--primary' : 'mco-book-button--secondary';
                $domain = $store_map[$key] ?? 'Amazon.' . $key;
                echo '<a href="' . esc_url($url) . '" target="_blank" rel="noopener noreferrer" class="mco-book-button ' . $button_class . '">'.mco_get_svg_icon('cart').' Buy on ' . esc_html($domain) . '</a>';
            }
        } else {
            echo '<p>Purchase links coming soon.</p>';
        }

        echo '</div></div>';
    }
    echo '</div>';
    return ob_get_clean();
}

function mco_single_book_shortcode() {
    global $post;
    if (!$post || $post->post_type !== 'mco_recommended_book') return '<p>This shortcode must be used on a "Recommended Book" post.</p>';

    $config_data = mco_get_app_config_data();
    $book_id_meta = get_post_meta($post->ID, '_mco_book_id', true);
    $book = current(array_filter($config_data['suggestedBooks'], function($b) use ($book_id_meta) { return $b['id'] === $book_id_meta; }));

    if (!$book) return '<p>Book data not found in application configuration.</p>';

    ob_start();
    
    // FIX: Get raw post content from the database to bypass other content filters, then apply wpautop manually.
    $raw_post = get_post($post->ID);
    $book_content = '';
    if ($raw_post) {
        $book_content = wpautop($raw_post->post_content);
    }

    $book_cover = '';
    if (!empty($book['thumbnailUrl'])) {
        $book_cover = '<img src="' . esc_url($book['thumbnailUrl']) . '" alt="' . esc_attr($book['title']) . '">';
    } else {
        $site_host = parse_url(home_url(), PHP_URL_HOST);
        if (strpos($site_host, 'coding-online') !== false) {
            $book_cover = mco_render_mco_procedural_cover_php($book);
        } else {
            $book_cover = mco_render_annapoorna_procedural_cover_php($book);
        }
    }

    $links = array_filter($book['affiliateLinks']);

    ?>
    <div class="mco-single-book-card">
        <div class="mco-single-book-card__cover">
            <?php echo $book_cover; ?>
        </div>
        <div class="mco-single-book-card__details">
            <h1><?php echo esc_html($book['title']); ?></h1>
            <div class="mco-single-book-card__description">
                <?php echo wp_kses_post($book_content); ?>
            </div>
            <?php if (!empty($links)): ?>
                <div class="mco-single-book-card__buttons">
                    <p class="mco-single-book-card__buttons-label">Purchase this book:</p>
                    <?php
                    $store_map = ['com' => 'Amazon.com', 'in' => 'Amazon.in', 'ae' => 'Amazon.ae'];
                    $primary_link_info = mco_get_geo_primary_link_info($links);

                    if ($primary_link_info): ?>
                        <a href="<?php echo esc_url($primary_link_info['url']); ?>" class="mco-single-book-card__button mco-single-book-card__button--primary" target="_blank" rel="noopener noreferrer">
                            <?php echo mco_get_svg_icon('cart'); ?>
                            Buy on <?php echo esc_html($primary_link_info['domainName']); ?>
                        </a>
                    <?php endif; ?>
                    <?php foreach ($links as $key => $url): if ($primary_link_info && $key === $primary_link_info['key']) continue; ?>
                        <a href="<?php echo esc_url($url); ?>" class="mco-single-book-card__button mco-single-book-card__button--secondary" target="_blank" rel="noopener noreferrer">
                            <?php echo mco_get_svg_icon('cart'); ?>
                            Buy on <?php echo esc_html($store_map[$key]); ?>
                        </a>
                    <?php endforeach; ?>
                     <p style="font-size: 0.75rem; color: #64748b; margin-top: 1rem; text-align: center;"> As an Amazon Associate, we earn from qualifying purchases. Using our links doesn’t cost you anything extra and helps support our platform to keep creating great content for you. Please note that book availability may vary by region.</p>
                </div>
            <?php endif; ?>
        </div>
    </div>
    <?php
    return ob_get_clean();
}

function mco_render_study_hall_sidebar() {
    $config_data = mco_get_app_config_data();
    if (empty($config_data['suggestedBooks'])) return '';

    $all_books = $config_data['suggestedBooks'];
    shuffle($all_books);
    $random_books = array_slice($all_books, 0, 5);

    ob_start();
    ?>
    <div class="mco-study-hall-sidebar">
        <h3 class="mco-study-hall-sidebar__title">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"/><path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"/></svg>
            <span>Study Hall</span>
        </h3>
        <div class="mco-study-hall-sidebar__grid">
            <?php foreach ($random_books as $book):
                $link_data = mco_get_geo_primary_link_info($book['affiliateLinks']);
                if (!$link_data) continue;

                $book_cover = '';
                if (!empty($book['thumbnailUrl'])) {
                    $book_cover = '<img src="' . esc_url($book['thumbnailUrl']) . '" alt="' . esc_attr($book['title']) . '" style="width:100%; height:100%; object-fit: cover;">';
                } else {
                    $site_host = parse_url(home_url(), PHP_URL_HOST);
                    $book_cover = (strpos($site_host, 'coding-online') !== false) 
                        ? mco_render_mco_procedural_cover_php($book) 
                        : mco_render_annapoorna_procedural_cover_php($book);
                }
            ?>
            <div class="mco-book-card-sidebar">
                <div class="mco-book-card-sidebar__cover"><?php echo $book_cover; ?></div>
                <div class="mco-book-card-sidebar__content">
                    <h4 class="mco-book-card-sidebar__title"><?php echo esc_html($book['title']); ?></h4>
                    <a href="<?php echo esc_url($link_data['url']); ?>" target="_blank" rel="noopener noreferrer" class="mco-book-card-sidebar__button">
                        Buy on <?php echo esc_html($link_data['domainName']); ?>
                    </a>
                </div>
            </div>
            <?php endforeach; ?>
        </div>
        <p class="mco-study-hall-sidebar__disclaimer">
            Using our affiliate links doesn't cost you extra and helps support our platform. Note: Book availability may vary by region. Thank you!
        </p>
    </div>
    <?php
    return ob_get_clean();
}
?>