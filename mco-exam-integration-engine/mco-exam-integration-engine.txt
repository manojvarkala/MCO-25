// This file contains the main plugin logic, hooks, and includes.
// The plugin header is in plugin-header.txt and is prepended during the build process.

// Prevent duplicate plugin activation errors. This runs on every admin page load.
if (!function_exists('mco_is_plugin_already_active')) {
    function mco_is_plugin_already_active() {
        if (is_admin() && current_user_can('activate_plugins') && function_exists('is_plugin_active') && is_plugin_active(plugin_basename(__FILE__))) {
            
            // FIX: Ensure plugin.php is loaded before using get_file_data(), as its availability is not guaranteed on admin_init.
            if ( ! function_exists( 'get_file_data' ) ) {
                require_once ABSPATH . 'wp-admin/includes/plugin.php';
            }
            
            $plugins = get_option('active_plugins');
            $this_plugin_path = plugin_basename(__FILE__);
            $this_plugin_dir = dirname($this_plugin_path);
            $duplicates = [];

            // Get data for the current plugin to compare against others
            $current_plugin_data = get_file_data(__FILE__, ['Name' => 'Plugin Name']);
            $current_plugin_name = $current_plugin_data['Name'];

            foreach ($plugins as $plugin_path) {
                if ($plugin_path === $this_plugin_path) continue; // Skip itself

                // Check if another plugin with the same name exists in a different folder
                if (file_exists(WP_PLUGIN_DIR . '/' . $plugin_path)) {
                    $plugin_data = get_file_data(WP_PLUGIN_DIR . '/' . $plugin_path, ['Name' => 'Plugin Name']);
                    if (isset($plugin_data['Name']) && $plugin_data['Name'] === $current_plugin_name && dirname($plugin_path) !== $this_plugin_dir) {
                        $duplicates[] = $plugin_path;
                    }
                }
            }
            
            if (!empty($duplicates)) {
                deactivate_plugins($this_plugin_path);
                set_transient('mco_duplicate_plugin_error', true, 60);
                if (isset($_GET['activate'])) {
                    unset($_GET['activate']);
                }
            }
        }
    }
    add_action('admin_init', 'mco_is_plugin_already_active');

    function mco_show_duplicate_plugin_notice() {
        if (get_transient('mco_duplicate_plugin_error')) {
            echo '<div class="notice notice-error is-dismissible"><p><strong>Warning:</strong> A duplicate "MCO Exam Integration Engine" plugin was detected and has been deactivated to prevent site errors. Please go to your Plugins page and delete the older version before re-activating.</p></div>';
            delete_transient('mco_duplicate_plugin_error');
        }
    }
    add_action('admin_notices', 'mco_show_duplicate_plugin_notice');
}


// --- CONSTANTS & INCLUDES ---

define('MCO_PLUGIN_FILE', __FILE__);
define('MCO_PLUGIN_PATH', plugin_dir_path(MCO_PLUGIN_FILE));
define('MCO_PLUGIN_URL', plugin_dir_url(MCO_PLUGIN_FILE));

// FIX: Replaced the fragile, admin-only get_file_data() call with a static definition.
// This was causing a fatal PHP error on all frontend and API requests.
if (!defined('MCO_PLUGIN_VERSION')) {
    define('MCO_PLUGIN_VERSION', '1.0.0');
}


// Include all the necessary logic files
require_once MCO_PLUGIN_PATH . 'includes/mco-cpts.php';
require_once MCO_PLUGIN_PATH . 'includes/mco-data.php';
require_once MCO_PLUGIN_PATH . 'includes/mco-api.php';
require_once MCO_PLUGIN_PATH . 'includes/mco-admin.php';
require_once MCO_PLUGIN_PATH . 'includes/mco-shortcodes.php';


// --- INITIALIZATION HOOKS ---

if (!function_exists('mco_exam_engine_init')) {
    function mco_exam_engine_init() {
        mco_register_custom_post_types();
        mco_register_api_hooks();
        if (is_admin()) {
            mco_register_admin_hooks();
        }
        mco_register_shortcode_hooks();

        add_rewrite_rule('^exam-login/?$', 'index.php?pagename=exam-login', 'top');
    }
    add_action('init', 'mco_exam_engine_init');
}

if (!function_exists('mco_exam_engine_activate')) {
    function mco_exam_engine_activate() {
        // FIX: Removed mco_register_custom_post_types() from the activation hook.
        // Calling register_post_type() or register_taxonomy() before the 'init' action
        // is incorrect and causes a fatal error on plugin activation.
        // The CPTs are correctly registered on the 'init' hook via mco_exam_engine_init(),
        // so we only need to flush the rewrite rules here to ensure the new CPT permalinks
        // are recognized by WordPress after activation.
        flush_rewrite_rules();
        delete_transient('mco_app_config_data');
    }
    register_activation_hook(MCO_PLUGIN_FILE, 'mco_exam_engine_activate');
}

if (!function_exists('mco_exam_engine_deactivate')) {
    function mco_exam_engine_deactivate() {
        flush_rewrite_rules();
    }
    register_deactivation_hook(MCO_PLUGIN_FILE, 'mco_exam_engine_deactivate');
}