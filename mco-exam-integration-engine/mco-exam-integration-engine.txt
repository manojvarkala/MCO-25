<?php

if (!defined('ABSPATH')) exit;

// Prevent duplicate plugin activation errors. This runs on every admin page load.
if (!function_exists('mco_is_plugin_already_active')) {
    function mco_is_plugin_already_active() {
        if (is_admin() && current_user_can('activate_plugins') && function_exists('is_plugin_active') && is_plugin_active(plugin_basename(__FILE__))) {
            $plugins = get_option('active_plugins');
            $this_plugin_path = plugin_basename(__FILE__);
            $this_plugin_dir = dirname($this_plugin_path);
            $duplicates = [];

            // Get data for the current plugin to compare against others
            $current_plugin_data = get_plugin_data(__FILE__);
            $current_plugin_name = $current_plugin_data['Name'];

            foreach ($plugins as $plugin_path) {
                if ($plugin_path === $this_plugin_path) continue; // Skip itself

                // Check if another plugin with the same name exists in a different folder
                if (file_exists(WP_PLUGIN_DIR . '/' . $plugin_path)) {
                    $plugin_data = get_plugin_data(WP_PLUGIN_DIR . '/' . $plugin_path);
                    if ($plugin_data['Name'] === $current_plugin_name && dirname($plugin_path) !== $this_plugin_dir) {
                        $duplicates[] = $plugin_path;
                    }
                }
            }
            
            if (!empty($duplicates)) {
                // A duplicate was found. Deactivate this (the newly activated) one.
                deactivate_plugins($this_plugin_path);
                // Set a transient to show an admin notice.
                set_transient('mco_duplicate_plugin_error', true, 60);
                // Prevent the "Plugin activated." message from appearing.
                if (isset($_GET['activate'])) {
                    unset($_GET['activate']);
                }
            }
        }
    }
    add_action('admin_init', 'mco_is_plugin_already_active');

    function mco_show_duplicate_plugin_notice() {
        if (get_transient('mco_duplicate_plugin_error')) {
            echo '<div class="notice notice-error is-dismissible"><p><strong>Warning:</strong> A duplicate "MCO Exam Integration Engine" plugin was detected and has been deactivated to prevent site errors. Please go to your Plugins page and delete the older version before re-activating.</p></div>';
            delete_transient('mco_duplicate_plugin_error');
        }
    }
    add_action('admin_notices', 'mco_show_duplicate_plugin_notice');
}


// --- CONSTANTS & INCLUDES ---

// Define core plugin constants
define('MCO_PLUGIN_FILE', __FILE__);
define('MCO_PLUGIN_PATH', plugin_dir_path(MCO_PLUGIN_FILE));
define('MCO_PLUGIN_URL', plugin_dir_url(MCO_PLUGIN_FILE));

// Define version constant dynamically from the header file's data
if (!function_exists('get_plugin_data')) {
    require_once(ABSPATH . 'wp-admin/includes/plugin.php');
}
$mco_plugin_data = get_plugin_data(MCO_PLUGIN_FILE);
define('MCO_PLUGIN_VERSION', $mco_plugin_data['Version']);

// Include all the necessary logic files
require_once MCO_PLUGIN_PATH . 'includes/mco-cpts.php';
require_once MCO_PLUGIN_PATH . 'includes/mco-data.php';
require_once MCO_PLUGIN_PATH . 'includes/mco-api.php';
require_once MCO_PLUGIN_PATH . 'includes/mco-admin.php';
require_once MCO_PLUGIN_PATH . 'includes/mco-shortcodes.php';


// --- INITIALIZATION HOOKS ---

// Main initialization function to register all hooks
if (!function_exists('mco_exam_engine_init')) {
    function mco_exam_engine_init() {
        mco_register_custom_post_types();
        mco_register_api_hooks();
        mco_register_admin_hooks();
        mco_register_shortcode_hooks();
    }
    add_action('init', 'mco_exam_engine_init');
}

// Activation hook for flushing rewrite rules
if (!function_exists('mco_exam_engine_activate')) {
    function mco_exam_engine_activate() {
        mco_register_custom_post_types();
        flush_rewrite_rules();
    }
    register_activation_hook(MCO_PLUGIN_FILE, 'mco_exam_engine_activate');
}

// Deactivation hook
if (!function_exists('mco_exam_engine_deactivate')) {
    function mco_exam_engine_deactivate() {
        flush_rewrite_rules();
    }
    register_deactivation_hook(MCO_PLUGIN_FILE, 'mco_exam_engine_deactivate');
}
?>